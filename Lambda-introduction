Today we are going to learn the fundamentals of Serverless architecture. also we will understand the difference between Ec2 and Lambda functions? (https://www.youtube.com/watch?v=5fTtmeCpSRw)
Also we will understand when should we use ec2 and ehen should we use lambda functions. as a devops engineer we have both choices, we can use ec2 and lambda as well?

1) What is lambda and what problem it will solve ?
   When we discuss lambda we should remain two primary things.
   1) Compute 2) Serverless.
   Lambda funtions are belongs to the compute family but it solve the problem of serverless.
   It belongs to same family which ec2 belongs too. but the primary difference between using ec2 and using lambda function follow the serverless architecture.
   That means if you are spinningup a lambda function like you are going to aws console and create a lambda function aws will taking care of the server depends on appliction which we are running. 

Example:
  If you wanna run python/nodejs application then what aws does is aws will automatically ceate a compute for us(like ec2) depending on your requirement.
  For Example:
    let's say you wrorte a calculation function for your application, so when your applucation is running what aws does is it'll create entire compute for us and once your application is done,
    let's say user tried to perform 2+3, once this function is done what aws will does is, it'll teardown(remove) the instances, where as that is not a case with ec2. 
    because ec2 we have to take care of tearingdown the ec2. 

Difference b/w EC2 and Lambda Function:
---------------------------------------
  Ec2: Here we are responsible for creating and maintaing servers for running and Scalingup and scaling down the servers for our applications. But
  Lambda: where as in the serverless architecture we are not responsible for the servers at all. aws will taking care of creating and managing the servers for our applications, it'll reducing a lot of efforts.
          but It'll create the servers for our applications once application task is done it'll automatically scale down the servers.
 
  Example with sample requirment:
  -------------------------------
  Let's assume there is a food delivery platform, this food delivery platform lets say some user send an order request, he goes to the check out and he performs the payments and once the transaction is done,
  customer will moveout from the application and his food order is placed.
  
  Solution(if we use lambda for this requirment):
  -----------------------------------------------
   So if you are using the lambda function for this specific activity like the checkout form and receiving payments from user what happends is,
   when user sends an request only then aws creates an infrastructure for running this order and payment application, once payment/transaction is done,
   once the task is completed aws will scaledown the infrastructure that which it was created for this payment application. 

  Simply : Once the requirement is there aws will create that server for us, once the requirement is done aws will teardown that server for us. Everything is automatic here.

Note Points:
===========
If we create an ec2 instace we will get an Ip address and we can come to know where it's running and other things, here we are the owners for complete ec2 details,
Here we can control public ip addresses and subnet groups, autoscaling and many things. But 

In terms of lambda functions we don't get anything related to IP address and not even know where this instance is created and where this instance is hosted. we can't see the details of this lambda function.




